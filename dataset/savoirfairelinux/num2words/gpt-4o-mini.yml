name: Python CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install tox-travis
          pip install coveralls

      - name: Run tests
        run: tox

      - name: Upload coverage
        if: success() && steps.run_tests.outputs.coverage-file == '.coverage'
        run: coveralls

  flake8:
    runs-on: ubuntu-latest
    needs: test
    if: matrix.python-version == '3.8'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip install tox-travis
          pip install coveralls

      - name: Run flake8
        run: tox -e flake8

  isort:
    runs-on: ubuntu-latest
    needs: test
    if: matrix.python-version == '3.8'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip install tox-travis
          pip install coveralls

      - name: Run isort
        run: tox -e isort

  test-py38:
    runs-on: ubuntu-latest
    if: matrix.python-version == '3.8'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip install tox-travis
          pip install coveralls

      - name: Run tests
        run: tox

      - name: Upload coverage
        if: success() && steps.run_tests.outputs.coverage-file == '.coverage'
        run: coveralls

name: CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.8"]
    env:
      BOTO_CONFIG: /dev/null
    steps:
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Setup DynamoDB Local
      run: |
        mkdir /tmp/dynamodb_local
        wget -O - https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_latest.tar.gz | tar xz --directory /tmp/dynamodb_local
        java -Djava.library.path=/tmp/dynamodb_local/DynamoDBLocal_lib -jar /tmp/dynamodb_local/DynamoDBLocal.jar -sharedDb -inMemory &
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install flake8
    - name: Run flake8
      run: flake8 --ignore=E501,W504
    - name: Copy test files
      run: |
        mkdir dump && cp -a test/testTable dump
    - name: Test basic restore and backup
      run: |
        python dynamodump.py -m restore -r local -s testTable -d testRestoredTable --host localhost --port 8000 --accessKey a --secretKey a
        python dynamodump.py -m backup -r local -s testRestoredTable --host localhost --port 8000 --accessKey a --secretKey a
        python test/test.py
    - name: Test wildcard restore and backup
      run: |
        python dynamodump.py -m restore -r local -s "*" --host localhost --port 8000 --accessKey a --secretKey a
        rm -rf dump/test*
        python dynamodump.py -m backup -r local -s "*" --host localhost --port 8000 --accessKey a --secretKey a
        python test/test.py
    - name: Test prefixed wildcard restore and backup
      run: |
        python dynamodump.py -m restore -r local -s "test*" --host localhost --port 8000 --accessKey a --secretKey a --prefixSeparator ""
        rm -rf dump/test*
        python dynamodump.py -m backup -r local -s "test*" --host localhost --port 8000 --accessKey a --secretKey a --prefixSeparator ""
        python test/test.py
